# JavaScript ES6 snippets

# arrow function
snippet => "Arrow function" i
(${1}) => {
	${2}
}
endsnippet

snippet fe "function expression"
const ${1} = (${3}) => {
	${2}
}
endsnippet

snippet ef "expression arrow function" i
const ${1} = (${3}) => {
	${2}
}
endsnippet

# class
snippet class "es6 class"
class ${1:name} {
	constructor(${2:arg}){
		${3: //init}
	}
	${4}
}
endsnippet

# forof
snippet forof "for of ..."
for(let ${1:s} of ${2:sequence}){
	${3}
}
endsnippet

# require
snippet rq "require module"
const ${1:module} = require("$1")
endsnippet

# import
snippet im "import module"
import ${1:module} from "$1"
endsnippet

# export
snippet ex "export"
export ${1:default} ${2:bar}
endsnippet
#---------------------------------------


# my for loop
snippet for "for loop"
for ( let ${1:i} = ${2:0}; $1 < ${3:length}; $1++ ) {
	$0
}
endsnippet

# log
snippet log "javascript common log"
console.log(${1:logText})
endsnippet

# table log
snippet logt "javascript table log"
console.table(${1:logText})
endsnippet

# debugger
snippet db "javascript debugger"
debugger
endsnippet

# class function bind
snippet cb "class function bind"
this.${1:function_name} = this.$1.bind(this)$0
endsnippet

# angular log
snippet alog "angular $log"
$log.info(${1:logText})
endsnippet


#setState 
snippet ss "setState shortcut"
this.setState({$0})
endsnippet

#destructrue state 
snippet ds "destructrue state shortcut"
const { ${1} } = this.state
endsnippet

#destructrue props 
snippet dp "destructrue props shortcut"
const { ${1} } = this.props
endsnippet

snippet ue "useEffect"
useEffect(() => {
	$1
}${0:,[]})
endsnippet

snippet us "useState"
const [$1, set${1/\w+/\u$0/}] = useState($0)
endsnippet

# react hook component
snippet rhc "react hook component"
import React, { useState, useEffect } from "react"

export default function `!v expand('%:t:r')` () {
	return (
		<div>
			$0
		</div>
  )
}
endsnippet

# react class
snippet rcl "common react class module"
import React, { Component } from "react"

class ${1:`!v expand('%:t:r')`} extends Component {
  $0
  render() {
	  return (
	    <div>$1</div>
	  )
  }
}
export default $1

endsnippet

# react class
snippet rcp "common react class with propTypes module"
import React, { Component } from "react"
import PropTypes from "prop-types"

class ${1:`!v expand('%:t:r')`} extends Component {
  constructor(props) {
    super(props)
  }

  render() {
	return (
		<div>
			$1
		</div>
	)
  }
}

export default $1

$1.propTypes = {
//optionalArray: PropTypes.array,
//optionalBool: PropTypes.bool,
//optionalFunc: PropTypes.func.isRequired,
//optionalNumber: PropTypes.number,
//optionalObject: PropTypes.object,
//optionalString: PropTypes.string,
//optionalSymbol: PropTypes.symbol,
}
endsnippet

# TODO
snippet td; "TODO"
// TODO:  
endsnippet
# FIXME
snippet fm; "FIXME"
// FIXME:  
endsnippet


# 小程序
snippet sd "mini setData"
this.setData({$1})
endsnippet

# vue {{{
snippet div. "div tag"
<div class="$1">$2</div>
endsnippet
#}}}

# jsx {{{
snippet btn "antd button link"
<Button>
  $1
</Button>
endsnippet
snippet btnl "antd button link"
<Button type='link'>
  $1
</Button>
endsnippet
snippet btnp "antd button link"
<Button type='primary'>
  $1
</Button>
endsnippet

snippet div "div tag"
<div>$1</div>
endsnippet
# currently use vue
# snippet div. "div tag"
# <div className='$1'>$2</div>
# endsnippet
#}}}

